// Code generated by mockery v2.53.3. DO NOT EDIT.

package main

import (
	copy "github.com/cloudogu/dogu-data-seeder/internal/copy"
	mock "github.com/stretchr/testify/mock"
)

// mockVolumeCopier is an autogenerated mock type for the volumeCopier type
type mockVolumeCopier struct {
	mock.Mock
}

type mockVolumeCopier_Expecter struct {
	mock *mock.Mock
}

func (_m *mockVolumeCopier) EXPECT() *mockVolumeCopier_Expecter {
	return &mockVolumeCopier_Expecter{mock: &_m.Mock}
}

// CopyVolumeMount provides a mock function with given fields: srcToDest
func (_m *mockVolumeCopier) CopyVolumeMount(srcToDest []copy.SrcAndDestination) error {
	ret := _m.Called(srcToDest)

	if len(ret) == 0 {
		panic("no return value specified for CopyVolumeMount")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]copy.SrcAndDestination) error); ok {
		r0 = rf(srcToDest)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockVolumeCopier_CopyVolumeMount_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CopyVolumeMount'
type mockVolumeCopier_CopyVolumeMount_Call struct {
	*mock.Call
}

// CopyVolumeMount is a helper method to define mock.On call
//   - srcToDest []copy.SrcAndDestination
func (_e *mockVolumeCopier_Expecter) CopyVolumeMount(srcToDest interface{}) *mockVolumeCopier_CopyVolumeMount_Call {
	return &mockVolumeCopier_CopyVolumeMount_Call{Call: _e.mock.On("CopyVolumeMount", srcToDest)}
}

func (_c *mockVolumeCopier_CopyVolumeMount_Call) Run(run func(srcToDest []copy.SrcAndDestination)) *mockVolumeCopier_CopyVolumeMount_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]copy.SrcAndDestination))
	})
	return _c
}

func (_c *mockVolumeCopier_CopyVolumeMount_Call) Return(_a0 error) *mockVolumeCopier_CopyVolumeMount_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockVolumeCopier_CopyVolumeMount_Call) RunAndReturn(run func([]copy.SrcAndDestination) error) *mockVolumeCopier_CopyVolumeMount_Call {
	_c.Call.Return(run)
	return _c
}

// newMockVolumeCopier creates a new instance of mockVolumeCopier. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockVolumeCopier(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockVolumeCopier {
	mock := &mockVolumeCopier{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
