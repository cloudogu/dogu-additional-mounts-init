// Code generated by mockery v2.53.3. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// mockFileTracker is an autogenerated mock type for the fileTracker type
type mockFileTracker struct {
	mock.Mock
}

type mockFileTracker_Expecter struct {
	mock *mock.Mock
}

func (_m *mockFileTracker) EXPECT() *mockFileTracker_Expecter {
	return &mockFileTracker_Expecter{mock: &_m.Mock}
}

// AddFile provides a mock function with given fields: path
func (_m *mockFileTracker) AddFile(path string) error {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for AddFile")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockFileTracker_AddFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AddFile'
type mockFileTracker_AddFile_Call struct {
	*mock.Call
}

// AddFile is a helper method to define mock.On call
//   - path string
func (_e *mockFileTracker_Expecter) AddFile(path interface{}) *mockFileTracker_AddFile_Call {
	return &mockFileTracker_AddFile_Call{Call: _e.mock.On("AddFile", path)}
}

func (_c *mockFileTracker_AddFile_Call) Run(run func(path string)) *mockFileTracker_AddFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *mockFileTracker_AddFile_Call) Return(_a0 error) *mockFileTracker_AddFile_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockFileTracker_AddFile_Call) RunAndReturn(run func(string) error) *mockFileTracker_AddFile_Call {
	_c.Call.Return(run)
	return _c
}

// DeleteAllTrackedFiles provides a mock function with no fields
func (_m *mockFileTracker) DeleteAllTrackedFiles() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for DeleteAllTrackedFiles")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// mockFileTracker_DeleteAllTrackedFiles_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteAllTrackedFiles'
type mockFileTracker_DeleteAllTrackedFiles_Call struct {
	*mock.Call
}

// DeleteAllTrackedFiles is a helper method to define mock.On call
func (_e *mockFileTracker_Expecter) DeleteAllTrackedFiles() *mockFileTracker_DeleteAllTrackedFiles_Call {
	return &mockFileTracker_DeleteAllTrackedFiles_Call{Call: _e.mock.On("DeleteAllTrackedFiles")}
}

func (_c *mockFileTracker_DeleteAllTrackedFiles_Call) Run(run func()) *mockFileTracker_DeleteAllTrackedFiles_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *mockFileTracker_DeleteAllTrackedFiles_Call) Return(_a0 error) *mockFileTracker_DeleteAllTrackedFiles_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *mockFileTracker_DeleteAllTrackedFiles_Call) RunAndReturn(run func() error) *mockFileTracker_DeleteAllTrackedFiles_Call {
	_c.Call.Return(run)
	return _c
}

// newMockFileTracker creates a new instance of mockFileTracker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockFileTracker(t interface {
	mock.TestingT
	Cleanup(func())
}) *mockFileTracker {
	mock := &mockFileTracker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
